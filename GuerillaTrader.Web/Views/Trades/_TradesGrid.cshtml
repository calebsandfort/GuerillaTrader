@(Html.Kendo().Grid<TradeDto>()
    .Name("tradesGrid")
    .Columns(columns =>
    {
        columns.Bound(x => x.EntryDate).Width(140).Format("{0:M/d/yy h:mm tt}").ClientTemplate("<a href='javascript:void(0);' onclick='GuerillaTrader.Trade.showTradeModal(#:Id#)'>#:kendo.toString(EntryDate, 'M/d/yyyy h:mm tt')#</a>");
        columns.Bound(x => x.Security).Width(150).Title("Desc").Sortable(false);
        columns.Bound(x => x.Size).Width(75).Title("Qty");
        columns.Bound(x => x.TradeType).Width(100).ClientTemplate("#: TradeTypeDisplay #");
        columns.Bound(x => x.EntryPrice).Width(100).Format("{0:c2}");
        columns.Bound(x => x.Mark).Width(100).Format("{0:c2}");
        columns.Bound(x => x.Underlying).Width(100).Format("{0:c2}");
        //columns.Bound(x => x.StopLossPrice).Width(100).Format("{0:c5}");
        //columns.Bound(x => x.ProfitTakerPrice).Width(100).Format("{0:c5}");
        columns.Bound(x => x.ExitDate).Width(125).Format("{0:M/d/yy h:mm tt}").Title("Exit Date");
        columns.Bound(x => x.ProfitLoss).Width(100).Title("P/L");
        columns.Bound(x => x.Commissions).Width(100).Title("Comm");
        //columns.Bound(x => x.Active).Width(100).ClientTemplate("#= Active ? 'Yes' : 'No' #");
        //columns.Bound(x => x.PPT).Width(75).Format("{0:N2}");
        columns.Command(command => { command.Destroy(); }).Width(100);

    })
    .HtmlAttributes(new { style ="height: 730px;" })
    .ClientDetailTemplateId("tradesGridDetailTemplate")
    .ToolBar(toolbar =>
    {
        //toolbar.Create().Text("Add");
        //toolbar.Template("<a class='k-button' href='javascript:void(0);' onclick='GuerillaTrader.Trade.purge()'>Purge</a>");
        toolbar.Template(@<text>
                @(Html.Kendo().Menu()
                    .Name("tradesGridActionsMenu")
                    .Items(items =>
                    {
                        items.Add()
                            .Text("Add").LinkHtmlAttributes(new { style = "padding: 10px;" })
                            .Items(children =>
                            {
                                children.Add().Text("Manual Entry").HtmlAttributes(new { funcId = "0" });
                                children.Add().Text("Paste Futures Day Trades").HtmlAttributes(new { funcId = "1" });
                                children.Add().Text("Paste Open Covered Stock Positions").HtmlAttributes(new { funcId = "2" });
                                children.Add().Text("Paste Open Bull Put Spread Positions").HtmlAttributes(new { funcId = "5" });
                            });
                        items.Add()
                        .Text("Update").LinkHtmlAttributes(new { style = "padding: 10px;" })
                            .Items(children =>
                            {
                                children.Add().Text("Paste Update Covered Stock Positions").HtmlAttributes(new { funcId = "4" });
                                children.Add().Text("Paste Update Bull Put Spread Positions").HtmlAttributes(new { funcId = "6" });
                            });
                        items.Add()
                        .Text("Maintenance").LinkHtmlAttributes(new { style = "padding: 10px;" })
                            .Items(children =>
                            {
                                children.Add().Text("Purge").HtmlAttributes(new { funcId = "3" });
                            });
                    })
                    .Events(e => e.Select("tradesGridActionsMenu_Select"))
                )
            </text>);
    })
    //.Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Sortable(sortable => sortable
        .AllowUnsort(false))
    .Scrollable()
    .Filterable(filterable => filterable
        .Extra(false)
    //.Operators(operators => operators
    //.ForString(str => str.Clear()
    //    .IsEqualTo("Is")
    //))
    )
    .Events(events =>
    {
        events.Edit("GuerillaTrader.Trade.grid_edit");
    })
    .DataSource(dataSource => dataSource
        .Ajax()
        .Sort(sort => sort.Add(x => x.EntryDate).Descending())
        .Read(read =>
        {
            read.Action("Trades_Read", "Trades");
        }
        )
        .Model(model =>
        {
            model.Id(ce => ce.Id);
            model.Field(f => f.IsNew).Editable(false);
            model.Field(f => f.Id).Editable(false);
        })
        .Create(create =>
        {
            create.Action("Trade_Create", "Trades");
        })
        .Update(update =>
        {
            update.Action("Trade_Update", "Trades");
        })
        .Destroy(destroy =>
        {
            destroy.Action("Trade_Destroy", "Trades");
        })
    )
)

<script id="tradesGridDetailTemplate" type="text/kendo-tmpl">
    <div class="row">
        <div class="col-md-4">
            <div role="form" class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Setups</label>
                    <div class="col-sm-7">
                        <p class="form-control-static">#:EntrySetupsString#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Entry Rmks</label>
                    <div class="col-sm-7">
                        <p class="form-control-static">#:EntryRemarks#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Entry Ss</label>
                    <div class="col-sm-7">
                        #if(ShowEntryScreenshot){#
                        <img class="expandScreenshot img-responsive" style="padding-top: 5px; max-height: 250px; cursor: pointer;" src='@Url.Content("~/Screenshots/Screenshot/")#:EntryScreenshotDbId#' />
                        #}#
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div role="form" class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Reason</label>
                    <div class="col-sm-7">
                        <p class="form-control-static">#:ExitReasonString#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Exit Rmks</label>
                    <div class="col-sm-7">
                        <p class="form-control-static">#:ExitRemarks#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Exit Ss</label>
                    <div class="col-sm-7">
                        #if(ShowExitScreenshot){#
                        <img class="expandScreenshot img-responsive" style="padding-top: 5px; max-height: 250px; cursor: pointer;" src='@Url.Content("~/Screenshots/Screenshot/")#:EntryScreenshotDbId#' />
                        #}#
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div role="form" class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Exit</label>
                    <div class="col-sm-6">
                        <p class="form-control-static">#:kendo.toString(ExitPrice, 'c')#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">Commissions</label>
                    <div class="col-sm-6">
                        <p class="form-control-static">#:kendo.toString(Commissions, 'c')#</p>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label" for="form-group-input">P/L/C</label>
                    <div class="col-sm-6">
                        <p class="form-control-static">#:kendo.toString(ProfitLossPerContract, 'c')#</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
