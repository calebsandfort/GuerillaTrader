@model TradeDto

<div class="modal fade" id="tradeModal" tabindex="-1" role="dialog" aria-labelledby="tradeModal-label" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form id="tradeForm" class="form-horizontal">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="tradeModal-label">Trade</h4>
                </div>
                <div class="modal-body" style="padding-bottom: 0; max-height: 640px; overflow: auto;">
                    @Html.EditorFor(x => x.EntryDate, new { onChange = "GuerillaTrader.Trade.entryDateChange" })
                    @Html.EditorFor(x => x.MarketId, new { onChange = "GuerillaTrader.Trade.marketChange", onDataBound = "GuerillaTrader.Trade.marketChange" })
                    @Html.EditorFor(x => x.Timeframe)
                    @Html.EditorFor(x => x.Size)
                    @Html.EditorFor(x => x.Classification)
                    @Html.EditorFor(x => x.TradeType)
                    @Html.EditorFor(x => x.EntryScreenshotDbId, new { fieldName = "EntryScreenshotDbId" })
                    @Html.EditorFor(x => x.EntryPrice, new { decimals = 5 })
                    @*@Html.EditorFor(x => x.EntryPrice, new { onChange = "GuerillaTrader.Trade.entryPriceChange" })*@
                    @Html.EditorFor(x => x.StopLossPrice, new { decimals = 5 })
                    @Html.EditorFor(x => x.ProfitTakerPrice, new { decimals = 5 })
                    @Html.EditorFor(x => x.EntrySetups)
                    @Html.EditorFor(x => x.EntryRemarks)
                    @Html.EditorFor(x => x.ExitDate, new { required = false })
                    @Html.EditorFor(x => x.ExitReason, new { required = false, onSelect = "GuerillaTrader.Trade.exitReasonSelect" })
                    @Html.EditorFor(x => x.ExitPrice, new { required = false, decimals = 5 })
                    @Html.EditorFor(x => x.ExitRemarks, new { required = false })
                    @Html.EditorFor(x => x.ExitScreenshotDbId, new { required = false, fieldName = "ExitScreenshotDbId" })
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.TradingAccountId)
                    @Html.HiddenFor(x => x.TradingDayId)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>
