@model DateTime?

@{
    bool required = ViewData["required"] == null ? false : (bool)ViewData["required"];
    String onChange = ViewData["onChange"] == null ? String.Empty : (String)ViewData["onChange"];

    Dictionary<String, object> attributes = new Dictionary<string, object>();
    attributes.Add("style", "width:100%;");
    attributes.Add("class", "includeHidden");

    int cols = ViewData["cols"] == null ? 3 : (int)ViewData["cols"];

    if (required)
    {
        attributes.Add("required", "");
    }
}

<div class="form-group">
    @Html.LabelFor(m => m, new { @class = String.Format("col-sm-{0} control-label", cols) })
    <div class='@String.Format("col-sm-{0}", 12 - cols)'>
        @(Html.Kendo().DatePickerFor(m => m)
            .Events(events =>
            {
                if (!String.IsNullOrEmpty(onChange))
                {
                    events.Change(onChange);
                }
            })
            .HtmlAttributes(attributes)
            .DateInput())
    </div>
</div>
